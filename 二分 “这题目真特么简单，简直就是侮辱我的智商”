“这题目真特么简单，简直就是侮辱我的智商”
TimeLimit:1000MS  MemoryLimit:64MB
64-bit integer IO format:%lld
已解决 | 点击收藏
Problem Description
终极考验：高智商一定要做一道专业性强的题！
在金融中，我们有时会用内部收益率IRR来评价项目的投资财务效益，它等于使得投资净现值NPV等于0的贴现率。换句话说，给定项目的期数T、初始现金流CF0和项目各期的现金流CF1, CF2, ...，CFT，IRR是下面方程的解：

为了简单起见，本题假定：除了项目启动时有一笔投入（即初始现金流CF0 < 0）之外，其余各期均能赚钱（即对于所有i=1,2,...,T，CFi > 0）。根据定义，IRR可以是负数，但必须大于-1。
Input
输入文件最多包含25组测试数据，每个数据占两行，第一行包含一个正整数T（1<=T<=10），表示项目的期数。第二行包含T+1个整数：CF0, CF1, CF2, ..., CFT，其中CF0 < 0, 0 < CFi ≤ 10000 (i=1,2,...,T)。T=0表示输入结束，你的程序不应当处理这一行。

Output
对于每组数据，输出仅一行，即项目的IRR，四舍五入保留小数点后两位。如果IRR不存在，输出"No"，如果有多个不同IRR满足条件，输出"Too many"（均不含引号）
SampleInput
1
-1 2
2
-8 6 9
0
SampleOutput
1.00
0.50

找到线性关系  sum 大了 irr 增大 也就是 left = mid  反之  irr减少  就是 right = mid


#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<math.h>
using namespace std;
double cf[15];
double sum = 0;
int t = 0;
int check(double mid)
{
    sum = cf[0];
    double sum = cf[0];
    int i = 0;
    double temp = 0;
    for(i = 1; i< t+1; i++)
    {
        temp = cf[i]/(pow(1+mid, i));
        sum+=temp;
    }
    if(sum > 0 )
    {
        return 1;
    }
    else
    {
        return 0;
    }

}
int main()
{
    while(~scanf("%d", &t))
    {
        if(t == 0)
        {
            break;
        }
        int i = 0;
        for(i = 0; i<t+1; i++)
        {
            scanf("%lf", &cf[i]);
        }
        double left = -1;
        double right = 99999;
        while(left+0.0001 < right)
        {
            double mid = (left + right)/2;
            if(check(mid))//left左边部分sum >0   如果sum大了，下一个尝试的值应该变大，即left向右移动  也就是left = mid  以后直接看图来判断就行，解要变大left肯定向右边移动 也就是left = mid
            {
                left = mid;
            }
            else//left 右边部分  sum 都是<= 0
            {
                right = mid;
            }
        }
        printf("%.2lf\n", right);
    }
}

