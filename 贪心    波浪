波浪
TimeLimit:1000MS  MemoryLimit:128MB
64-bit integer IO format:%lld
Problem Description
小峰喜欢波浪的形状,现在他看见很多座山有的高有的低,他可以任意的摆放山的位置,他想要让山此起彼伏像海浪一样,所以他打算重新排列这些山的位置,对于一个第i个位置,如果i是奇数,需要满足i+1位置的山的高度小于等于i位置的山,且满足i位置的山的高度小于等于i+1后面所有的山,同样的如果i是偶数,它的高度需要小于等于i-1位置的山,并且小于等于后面所有的山.(最后一座山不需要满足后面的山比它矮只需要满足奇偶的相应条件)

Input
多组数据输入,先给出一个n代表有n座山,再给出n个整数代表n座山的高度.

1<=n<=1000

1<=hi<=1e18(hi代表山的高度)

Output
对于一组数据输出一个合法序列然后换行.

SampleInput
4
1 1 1 2
SampleOutput
1 1 2 1
hint:
第一座山需要满足它大于等于第二座山且小于等于第三座山及其以后的山.
第二座山需要满足它小于等于第一座山且小于等于第三座山及其以后的山.

#pragma warning(disable:4996)
#include <iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<queue>
#include<algorithm>
using namespace std;
//const int mod = 1000000007;
typedef long long ll;
//#user 35
ll a[1005];
int main()
{
	int n = 0;
	while (~scanf("%d", &n))
	{
		int i = 0;
		for (i = 1; i <= n; i++)
		{
			cin >> a[i];
		}
		sort(a + 1, a + n + 1);
		int j = 0;
		for (i = 1; i <= n; i++)
		{
			if (n & 1)
			{
				if (i == n)
				{
					cout << a[n];
					break;
				}
				if (i & 1)
				{
					cout << a[i + 1] << " ";
				}
				else
				{
					cout << a[i - 1] << " ";
				}
			}
			else
			{
				if (i & 1)
				{
					cout << a[i + 1] << " ";
				}
				else
				{
					cout << a[i - 1] << " ";
				}
			}
		}
		cout << endl;
	}

}
