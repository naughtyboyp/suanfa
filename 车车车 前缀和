车车车
TimeLimit: 2000/1000 MS (Java/Others)  MemoryLimit: 32768/32768 K (Java/Others)
64-bit integer IO format:%I64d
已解决 | 点击收藏
Problem Description
Bestland有一条非常长的马路，马路上设有n个公交汽车站。公交汽车站从左到右标号为1到n。有m个人想要乘公交。你的任务是找出每个人到终点为止所需要的时间。注意：你需要用来解决这道题目的信息在Input里面，请仔细阅读。
Input
输入的第一行包含一个整数T (1≤T≤60)，表示测试数据的组数。对于每组测试数据：第一行包含两个整数n和m (2≤n,m≤105)，表示公交车站的数目和乘客的数目。 接下来一行包含n−1个整数, d1,d2,…,dn−1 (1≤di≤109). di表示第i个公交站和第i+1个公交站之间的距离。在接下来的m行, 每行包含两个整数xi和yi (1≤xi,yi≤n,xi≠yi), 表示第i个人时刻0的时候在第xi个公交站并且想要到第yi个公交站去。(1≤i≤m)

对于第i个人, 他要坐的公交车在时刻0的时候从第((i−1) mod n)+1个公交站点出发，并且往右开。公交到达站点n的时候会立刻转向往左开，同样当公交到达站点1的时候也会立刻转向往右开。你可以认为公交每秒只开一个单位距离，你只需要考虑公交开的时间。
Output
对于每个人，输出到达yi个公交站点需要的最少时间。
SampleInput
1
7 3
2 3 4 3 4 5
1 7
4 5
5 4
SampleOutput
21
10
28
提示：
对于第一个人, 公交在站点1出发, 然后这个人在时刻0上车。21秒之后，公交到达站点7。
对于第二个人，公交在站点2出发。7秒之后，公交到达站点4，这个人上车。之后又过了3秒，公交到达站点5.总共用了10秒。
对于第三个人，公交在站点3出发。7秒之后，公交到达站点5，这个人上车。之后过了9秒，公交达到站点7，然后转向开往站点0。之后经过12秒，公交达到站点4。因此总共需要28秒时间。


总结出后面的规律输出即可

#include <stdio.h>
#include <stdlib.h>
long long  a[66666];
int main()
{
    int t = 0;
    scanf("%d", &t);
    while(t--)
    {
        int n = 0;
        int m = 0;
        scanf("%d%d", &n, &m);
        int i = 0;
        for(i = 2; i<=n; i++)//i表示到达第i站需要的时间
        {
            scanf("%lld", &a[i]);
            a[i] = a[i-1] + a[i];//前缀和
        }

        for(i = 1; i<=m; i++)
        {
            int now = (i-1)%n+1;//目前的位置
            int x = 0;
            int y = 0;
            scanf("%d%d", &x, &y);
            if(now <=x && x < y)//难点就在于得总结出这三种情况
            {
                printf("%lld\n", a[y] - a[now]);
            }
            if(now > x && x< y)
            {
                printf("%lld\n", a[n] - a[now] + a[n] + a[y]);
            }
            if(x > y)
            {
                printf("%lld\n", a[n] - a[now] + a[n] - a[y]);
            }
        }
    }
    return 0;
}
