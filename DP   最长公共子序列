最长公共子序列
TimeLimit:1000MS  MemoryLimit:10MB
64-bit integer IO format:%lld
已解决 | 点击收藏
Problem Description
 给定两个序列X和Y，求X和Y的最大长度公共子序列的长度。

一个序列的子序列，定义如下，选取一组严格递增的下标<i1,i2,i3,i4,……im>

则这些上标上的元素构成的新序列就是原序列的子序列，

比如序列 X = < a, b, c, f, b, c > ，选取下标 < 1, 2, 4, 6 >.后得到的序列Z=<a,b,f,c>就是X的子序列之一



Input
The program input is from the std input. Each data set in the input contains two strings representing the given sequences. The sequences are separated by any number of white spaces. The input data are correct.

字符串长度小于等于1000

Output
For each set of data the program prints on the standard output the length of the maximum-length common subsequence from the beginning of a separate line.
SampleInput
abcfbc         abfcab
programming    contest 
abcd           mnp
SampleOutput
4
2
0



#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
int dp[1005][1005] = {0};
int i = 0;
int j = 0;
char a[1005] = {0};
char b[1005] = {0};
int main()
{
    while(~scanf("%s%s",a, b))
    {
        int len1 = strlen(a);
        int len2 = strlen(b);
        for(i = 0; i<= len1; i++)
        {
            dp[0][i] = 0;
        }
        for(i = 0; i<= len2; i++)
        {
            dp[i][0] = 0;
        }
        for(i = 1; i<= len1; i++)
        {
            for(j = 1; j<=len2; j++)
            {
                    if(a[i-1] == b[j-1])//表格错位了  对应不要想错了哦
                    {
                        dp[i][j] = dp[i-1][j-1] +1;
                    }
                    else
                    {
                        dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                    }
            }
        }
        printf("%d\n", dp[len1][len2]);
    }
    return 0;
}
