题目描述
排列与组合是常用的数学方法，其中组合就是从nn个元素中抽出rr个元素(不分顺序且r \le n)r≤n)，我们可以简单地将nn个元素理解为自然数1,2,…,n1,2,…,n，从中任取rr个数。

现要求你输出所有组合。

例如n=5,r=3n=5,r=3，所有组合为：

12 3 , 1 2 4 , 1 2 5 , 1 3 4 ,1 3 5 , 1 4 5 , 2 3 4 , 2 3 5 , 2 4 5 , 3 4 5123,124,125,134,135,145,234,235,245,345

输入格式
一行两个自然数n,r(1<n<21,0 \le r \le n)n,r(1<n<21,0≤r≤n)。

输出格式
所有的组合，每一个组合占一行且其中的元素按由小到大的顺序排列，每个元素占三个字符的位置，所有的组合也按字典顺序。

**注意哦!输出时，每个数字需要33个场宽，pascal可以这样：

write(ans:3);

输入输出样例
输入 #1复制
5 3 
输出 #1复制
  1  2  3
  1  2  4
  1  2  5
  1  3  4
  1  3  5
  1  4  5
  2  3  4
  2  3  5
  2  4  5
  3  4  5
  
  
  #include <stdio.h>
#include <string.h>
#include<iostream>
#include<algorithm>
#include<string>
#include<cmath>
#include<queue>
#pragma warning(disable:4996)
using namespace std;
typedef long long ll;
int vis[30];
int n = 0;
int r = 0;
void dfs(int num, int now)
{
	if (num == r+1)
	{
		int i = 0;
		for (i = 1; i <= n; i++)
		{
			if (vis[i] == 0)
			{
				continue;
			}
			printf("%3d", i);
		}
		cout << endl;
		return;
	}
	int i = 0;
	for (i = now; i <= n; i++)
	{
		if (vis[i] == 0)
		{
			vis[i] = 1;
			dfs(num + 1, i+1);
			vis[i] = 0;
		}
	}
}
int main()
{
	cin >> n >> r;
	dfs(1,1);
}
