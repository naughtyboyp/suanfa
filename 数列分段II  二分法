数列分段II
TimeLimit:1000MS  MemoryLimit:128MB
64-bit integer IO format:%lld
Problem Description
对于给定的一个长度为N的正整数数列A[i]，现要将其分成M（M≤N）段，并要求每段连续，且每段和的最大值最小。

关于最大值最小：

例如一数列4 2 4 5 1要分成3段

将其如下分段：

[4 2][4 5][1]

第一段和为6，第2段和为9，第3段和为1，和最大值为9。

将其如下分段：

[4][2 4][5 1]

第一段和为4，第2段和为6，第3段和为6，和最大值为6。

并且无论如何分段，最大值不会小于6。

所以可以得到要将数列4 2 4 5 1要分成3段，每段和的最大值最小为6。



Input
输入的第1行包含两个正整数N，M，第2行包含N个空格隔开的非负整数A[i]，含义如题目所述。

(N≤100000，M≤N， A[i]之和不超过109。)

Output
输出仅包含一个正整数，即每段和最大值最小为多少。

SampleInput
5 3
4 2 4 5 1
SampleOutput
6


总结：
学会了一种分段，靠感觉

注意寻找线性关系，然后就是一定要根据题目寻找最优解，像本题最优解就是 满足能够分成m段的条件下 r尽量小   找到逻辑关系
本题思路如下
1.题目要求每段和的最大值的最小值
分析出 每段和的最大值 与 n段 之间关系
即每段和的最大值越大   n越小
每段和的最大值越小   n越大

通过图像可以分析出且根据题目要求最小值
那么就是
y满足等于m的条件下  右边界right也应尽量小，继续往下探，right的最小值

那么以下就是
1.找出最大值的边界
当n = 1 时   最大值为sum
当n = n-1 时  最小值为数列的最大值

2.求出mid能分成x段  并根据 x 与 m的大小关系来缩小边界



#include <bits/stdc++.h>
#include<stdio.h>
#include<string.h>
using namespace std;
int a[1000005];
int m = 0;
int n = 0;
int judge(int mid)
{
    int i = 0;
    int t = 0;
    int num = 1;
    for(i = 0; i<n; i++)
    {
        //开始分段
        t+=a[i];
        if(t > mid)//探
        {
            num++;
            t = a[i];
        }
    }
    if(num>m)
    {
        return 1;
    }
    return 0;
}
int main()
{

    scanf("%d%d", &n, &m);
    int i = 0;
    int l = 0;//左边界是最大值
    int r = 0;//右边界是和
    for(i = 0; i<n; i++)
    {
        scanf("%d", &a[i]);
        l = max(l, a[i]);
        r+=a[i];
    }
    l-=1;//注意用这种二分法 左边界一定要少1，右边界多1
    r+=1;
    while(l+1<r)
    {
        int mid = (l+r)/2;
        if(judge(mid))//如果mid可分大于m段，left左边表示分段均大于m，继续向右查找，寻找最优解
        {
            l = mid;
        }
        else//如果mid分小于等于m段，不符合条件，将向左查找，把m扩大,right左边表示分段均小于m
        {
            r = mid;
        }
    }
    printf("%d\n", r);
}
